(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),u=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(o,".").concat(m)]||d[m]||p[m]||a;return n?i.a.createElement(b,c(c({ref:t},s),{},{components:n})):i.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),i=n(6),a=(n(0),n(112)),o={id:"custom-driver",title:"Custom Driver"},c={unversionedId:"custom-driver",id:"custom-driver",isDocsHomePage:!1,title:"Custom Driver",description:"In Zeuz, to execute automation process, you can use BuiltInDriver where all",source:"@site/docs\\custom-driver.md",permalink:"/docs/custom-driver",sidebar:"docs",previous:{title:"Add new actions",permalink:"/docs/add-new-actions"},next:{title:"Common Actions",permalink:"/docs/actions-common"}},l=[],s={rightToc:l};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In Zeuz, to execute automation process, you can use Built_In_Driver where all\nour actions are declared, as well as you can build your own driver inside our\nframework and run your driver along with the Built_In_Driver. This documentation\nis about how you can define your own driver and make it work with the\nBuil_In_Driver. We will try a demo login which is a selenium web automation test\ncase. For this we will try the first 2 actions with our Built_In_Driver and the\nlast 2 actions with a Custom Driver meanwhile collecting the resources\nBuilt_In_Driver created."),Object(a.b)("p",null,"So, First of all, we will create a test case, add a step and we will declare 2 actions inside it-"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Go to link \u201c",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://demo.zeuz.ai/web/level/one/scenerios/login%E2%80%9D"}),"https://demo.zeuz.ai/web/level/one/scenerios/login\u201d")),Object(a.b)("li",{parentName:"ol"},"Enter Username = \u201czeuzTest\u201d")),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/1.jpeg",alt:null}))),Object(a.b)("p",null,"In this case, we don't need to change the step settings as we are executing\nthese 2 actions with Built_In_Driver and its set as default."),Object(a.b)("p",null,"Then suppose we want to declare 2 more actions with our own custom driver-"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Enter password = \u201czeuzPass\u201d"),Object(a.b)("li",{parentName:"ol"},"Click \u201cSign in\u201d button")),Object(a.b)("p",null,"Executing these 2 action will complete the demo login process So, to execute our\nown custom driver we need to add another step. Because step one will be executed\nby Built_In_Driver."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/2.jpeg",alt:null}))),Object(a.b)("p",null,"Here, we have created Step 2. Now lets click the \u201cStep info\u201d button\nA pop up will appear. Then click on the \u201cView/Edit Step\u201d button"),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/3.jpeg",alt:null}))),Object(a.b)("p",null,"A new window will be created. From that window you can see the default driver is\nour Buil_In_Driver. Now we will create our own driver by clicking the \u201cCREATE\nDRIVER\u201d button."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/4.jpeg",alt:null}))),Object(a.b)("p",null,"Click on the \u201cCREATE DRIVER\u201d at the bottom of the page."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/5.jpeg",alt:null}))),Object(a.b)("p",null,"Provide a Driver Name suppose \u201cMy_driver\u201d and click \u201cOK\u201d"),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/6.jpeg",alt:null}))),Object(a.b)("p",null,"Make Sure the driver remains at the \u201cAssigned Driver\u201d."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/7.jpeg",alt:null}))),Object(a.b)("p",null,"Now go back to the Edit Step page and REFRESH. There you will see your newly\ncreated driver. Select your driver from the drop down list. Thats it now the\nStep 2 will be executed by the My_driver and not with the Built_In_Driver."),Object(a.b)("p",null,"So at this point, we need some action dataset to pass through the My_driver and\nwrite code for the My_driver. You can set any dataset you want but your code and\ndataset should match."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/8.jpeg",alt:null}))),Object(a.b)("p",null,"So go back to the Test case and REFRESH. Then again enter Step-2. Then add 2\nactions randomly so that we can then edit them and make our own dataset. You can\nedit the texts of a cell by clicking that. You can add a row with the + sign and\ndelete a row with the X sign, thus making your own dataset. Now we will write\ncode for the driver and execute selenium scripts with the dataset we just\ncreated. First of all we need to create a python file at this location ..\\Zeuz\nNode\\ZeuzPythonNode\\Drivers\\ and name the file exactly \u201cMy_driver.py\u201d"),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/9.jpeg",alt:null}))),Object(a.b)("p",null,"Now, open \u201cMy_driver.py\u201d file in an Editor and write the codes for the driver."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import sys\nfrom Framework.Utilities import CommonUtil\nfrom Framework.Built_In_Automation.Shared_Resources import BuiltInFunctionSharedResources as sr\n\ndef sequential_actions(\n    dependency,\n    run_time_params,\n    step_data,\n    test_action_info,\n    file_attachment,\n    temp_q,\n    screen_capture,\n    device_info,\n    debug_actions=None,\n):\n    # For now we need the step_data only and the other parameters are for some advance usages\n     try:\n        # This is the dataset we have written in the server. Lets check in which format it is coming\n        print(step_data)\n\n        # Importing the selenium driver from Shared_Resources which was created by Built_In_Driver\n        selenium_driver = sr.Get_Shared_Variables(\"selenium_driver\")\n\n        # Now lets distribute the step_data between functions as separate actions and execute them\n        for action_dataset in step_data:\n            for left, mid, right in action_dataset:\n                if mid == 'my own action':\n                    Enter_text(action_dataset, selenium_driver)\n                    break\n            for left, mid, right in action_dataset:\n                if mid == 'perform click':\n                    click(action_dataset, selenium_driver)\n                    break\n\n    except Exception:\n        return CommonUtil.Exception_Handler(sys.exc_info(), temp_q)\n\n\ndef Enter_text(dataset, selenium_driver):\n    for left, mid, right in dataset:\n        if mid == \"my own paramter\" and left == \"id\":\n            Element = selenium_driver.find_element_by_id(right)     # Finds the textbox of password\n        if left == 'enter password text':\n            Element.send_keys(right)       # Enters the password\n\n\ndef click(dataset, selenium_driver):\n    for left, mid, right in dataset:\n        if mid == 'perform click' and left == \"id\":\n            Element = selenium_driver.find_element_by_id(right)     # Find sign in button\n            Element.click()     # Clicks Sign in button\n")),Object(a.b)("p",null,"After we have written the code, now if we run node_cli.py and run the test case\nfrom the server  we will see the Login was successful from the automation\nbrowser."),Object(a.b)("p",null,Object(a.b)("img",Object(r.a)({parentName:"p"},{src:"/img/custom-driver/10.jpeg",alt:null}))))}u.isMDXComponent=!0}}]);